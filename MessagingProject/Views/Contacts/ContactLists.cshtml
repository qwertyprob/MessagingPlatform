@{
    Layout = "_Layout";
    ViewData["Title"] = "Contacts";
}

<div class="container-fluid py-0 md-py-0">
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 p-0 ms-3" style="background:none;border:0px;">
            <h1 style="font-weight:600;">Contact list</h1>
        </div>
        <div class="row justify-content-center">
            <div class="col-12 col-md-10 py-4 bg-white rounded shadow-sm">
                @(
                    Html.DevExtreme().DataGrid()
                    .ID("container")
                    .DataSource(ds => ds.Mvc()
                    .Controller("Contacts")
                    .LoadAction("GetContactLists")
                    )
                    .Columns(columns =>
                    {
                        columns.Add().DataField("Id").Visible(false);
                        columns.Add().DataField("Name").Caption("Name");
                        columns.Add().DataField("Emails").Caption("Email");
                        columns.Add().DataField("Phones").Caption("Phones");
                        columns.Add().DataField("ParsedDate").Caption("Date");

                        columns.Add().Type(GridCommandColumnType.Buttons)
                        .Buttons(b =>
                        {
                            b.Add().Name(GridColumnButtonName.Edit).Icon("edit")
                        .OnClick("onClick");
                            b.Add().Name(GridColumnButtonName.Delete).Icon("trash")
                        .OnClick("openModalDelete");
                        }).Caption("Actions");
                    })
                    
                    .Paging(p => p.PageSize(10))
                    .FilterRow(f => f.Visible(true))
                    .SearchPanel(s => s.Visible(true))
                    .GroupPanel(g => g.Visible(true))
                    .Toolbar(toolbar =>
                    {
                        toolbar.Items(items =>
                        {
                            items.Add()
                        .Location(ToolbarItemLocation.Before)
                        .Widget(w => w.Button()
                        .Type(ButtonType.Default)
                        .Icon("add")
                        .ElementAttr(new { @class = "btn-success" })
                        .Text("Создать")
                        .OnClick("openModal")

                        );
                        });
                    })
                    .Sorting(s => s.Mode(GridSortingMode.Multiple))
                    .Editing(editing =>
                    {
                        editing.Mode(GridEditMode.Row);
                        editing.AllowAdding(true);
                        editing.AllowDeleting(true);
                        editing.AllowUpdating(true);
                    })
                    .OnRowClick("onRowClick")
                    )
            </div>
        </div>
    </div>
</div>

@* Create Modal *@
<div id="uploadModal" class="modal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5);">
    <div class="modal-content" style="background:#fff; padding:20px; width:90%; max-width:50em; margin:15% auto; border-radius:8px; position:relative;">
        <span onclick="closeModal()" style="cursor:pointer; position:absolute; top:0px; right:10px; font-size:35px;">&times;</span>
        <input type="text" id="listName" class="form-control" placeholder="Новое название" style="margin-top:3em; margin-bottom:1em;" />
        <input type="file" id="fileUpload" class="form-control" accept=".xlsx" />
        <div class="d-flex justify-content-end py-4 ms-2">
            <button class="btn btn-primary d-flex me-2 align-items-center" onclick="closeModal()">
                <img src="~/img/icons/close.svg" alt="close Icon" width="22" class="me-2">Закрыть
            </button>
            <button class="btn btn-success d-flex align-items-center" onclick="saveList()">
                <img src="~/img/icons/save.svg" alt="save Icon" width="22" class="me-2">Сохранить
            </button>
        </div>
    </div>
</div>

@* Delete Modal *@
<div id="deleteModal" class="modal" 
    style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5);">
    <div class="modal-content" style="background:#fff; padding:20px; width:90%; max-width:50em; margin:15% auto; border-radius:8px; position:relative;">
        <span onclick="closeModalDelete()" style="cursor:pointer; position:absolute; top:0px; right:10px; font-size:35px;">&times;</span>
        <h5 class="py-1">Вы уверены, что хотите удалить этот элемент? Пожалуйста введите <span class="text-name" style="color:gray; font-style:italic;"></span> и в поле ниже:</h5>
        <input type="text" id="myName" class="form-control" style="margin-top:3em;" />
        <span id="error-message" class="text-danger" style="display: none; margin-bottom:1em;"></span>
        <div class="row">
            <div class="col-6">
                <label>Email</label>
                <input type="text" id="emailField" class="form-control" style="margin-bottom:1em;" disabled />
            </div>
            <div class="col-6">
                <label>Phone</label>
                <input type="text" id="phoneField" class="form-control" style="margin-bottom:1em;" disabled />
                <input type="hidden" id="contactId" />
            </div>
        </div>
        <div class="d-flex justify-content-end py-4 ms-2">
            <button class="btn btn-primary d-flex me-2 align-items-center" onclick="closeModalDelete()">
                <img src="~/img/icons/close.svg" alt="close Icon" width="22" class="me-2">Закрыть
            </button>
            <button class="btn btn-danger d-flex me-2 align-items-center" onclick="deleteContact()">
                <img src="~/img/icons/trash.svg" alt="trash Icon" width="22" class="me-2">Удалить
            </button>
        </div>
    </div>
</div>


<script>
        // On row click event
    function onClick(e) {
        if (e.row && e.row.data) {
            const id = e.row.data.Id;
            window.location.href = `/Contacts/SingleList/${id}`;
        } else {
            console.error("Data not found in row!");
        }
    }

    function onRowClick(e) {
        const id = e.data.Id;
        window.location.href = `/Contacts/SingleList/${id}`;
    }

    // Modals
    // Delete Modal
       function openModalDelete(e) {
        const id = e.row.data.Id;
        $('#contactId').val(id);
        $.ajax({
            url: '/Contacts/DeleteInfo/' + id,
            type: 'GET',
            success: function(response) {
                console.log(response);

                if (response) {
                    var name = response.name || 'No Name';
                    var email = parseInt(response.emailCount, 10) || 0;
                    var phone = parseInt(response.phoneCount, 10) || 0;

                    
                    $('.text-name').text(name);
                    $('#listName').val('');
                    $('#emailField').val(email);
                    $('#phoneField').val(phone);
                    $('#listName').val(name);  

                    $('#deleteModal').show();  
                } else {
                    console.error('Invalid response format');
                }
            },
            error: function(xhr, status, error) {
                console.error('Error:', error);
            }
        });
    }

        //Delete contact
        //Delete contact
    function deleteContact() {
        const enteredName = $('#myName').val().trim();  
        const expectedName = $('.text-name').text().trim();  

        console.log("Entered Name:", enteredName);  
        console.log("Expected Name:", expectedName);  

        if (enteredName.toLowerCase() !== expectedName.toLowerCase()) {
        $('#error-message').text("Неверное имя! Убедитесь, что вы ввели правильное название.").show();
        return;
        }

        const id = $('#contactId').val();
        console.log("Contact ID:", id);

        if (!id) {
            console.error("ID не найден при удалении");
            return;
        }

        $.ajax({
            url: '/Contacts/DeleteContact/' + id,
            type: 'GET',
            success: function(response) {
                if (response && response.ErrorCode === 0) {
                    closeModalDelete();
                    
                    location.reload();
                } else {
                    $('#error-message').text('Ошибка при удалении: ' + response.ErrorMessage).show();
                }
            },
            error: function(xhr, status, error) {
                console.error('Error:', error);
                alert('Произошла ошибка при удалении контакта.');
            }
        });
    }


        function closeModalDelete() {
        $('#deleteModal').hide();  
    }

       window.onclick = function(event) {
        var deleteModal = document.getElementById("deleteModal");
        var uploadModal = document.getElementById("uploadModal");

        if (event.target === deleteModal) {
            closeModalDelete();
        }

        if (event.target === uploadModal) {
            closeModal();
        }
    };


    // Create Modal Logic
    document.addEventListener("DOMContentLoaded", function() {
        document.getElementById("uploadModal").style.display = "none";
    });

    function openModal() {
        document.getElementById("uploadModal").style.display = "block";  
    }

    function closeModal() {
        document.getElementById("uploadModal").style.display = "none";  
    }

    
    window.onclick = function(event) {
        var modal = document.getElementById("uploadModal");
        if (event.target === modal) {
            closeModal();  
        }
    };

</script>
