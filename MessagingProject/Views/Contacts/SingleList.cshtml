
@{
    Layout = "_Layout";
    ViewData["Title"] = "Contacts";

}


<div class="container-fluid py-0 md-py-0">
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 p-0 ms-3" style="background:none;border:0px;">
            <h1 style="font-weight:600;">Single list</h1>
        </div>
        <div class="row justify-content-center">
            <div class="col-12 col-md-10 py-4 bg-white rounded shadow-sm">
                @(
                    Html.DevExtreme().DataGrid()
                    .DataSource(ds => ds.Mvc()
                    .Controller("Contacts")
                    .LoadAction("SingleListQuery")
                    .LoadParams(new { id = ViewBag.ContactId })
                    )

                    .Columns(columns =>
                    {

                        columns.Add().DataField("Name").Caption("Name");
                        columns.Add().DataField("Email").Caption("Email");
                        columns.Add().DataField("Phone").Caption("Phone");

                        columns.Add().Type(GridCommandColumnType.Buttons)
                        .Buttons(b =>
                        {
                            b.Add().Name(GridColumnButtonName.Edit).Icon("edit");
                            b.Add().Name(GridColumnButtonName.Delete).Icon("trash");

                        }).Caption("Actions");
                    })



                    .Paging(p => p.PageSize(25))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new[] { 25, 50, 100 });
                        pager.ShowInfo(true);
                    })
                    .FilterRow(f => f.Visible(true))
                    .SearchPanel(s => s.Visible(true))
                    .GroupPanel(g => g.Visible(true))
                    .Sorting(s => s.Mode(GridSortingMode.Multiple))
                    .Editing(editing =>
                    {
                        editing.Mode(GridEditMode.Row);
                        editing.AllowAdding(true);
                        editing.AllowDeleting(true);
                        editing.AllowUpdating(true);
                    })
                    
                    )


            </div>
        </div>
    </div>
</div>

<script>
     var collapsed = false;
    function contentReady(e) {
        if(!collapsed) {
            collapsed = true;
            e.component.expandRow(["EnviroCare"]);
        }
    }

    function customizeTooltip(pointsInfo) {
        return { text: parseInt(pointsInfo.originalValue) + "%" };
    }

 </script>