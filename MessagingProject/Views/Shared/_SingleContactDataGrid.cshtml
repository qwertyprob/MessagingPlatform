@(
                    Html.DevExtreme().DataGrid()
                    .ID("singlelist")
                    .DataSource(ds => ds.Mvc()
                    .Controller("Contacts")
                    .LoadAction("SingleListQuery")
                    .LoadParams(new { id = ViewBag.ContactId })
                    )

                    .Columns(columns =>
                    {
                        columns.Add().DataField("Id").Visible(false);
                        columns.Add().DataField("Name").Caption("Name");
                        columns.Add().DataField("Email").Caption("Email");
                        columns.Add().DataField("Phone").Caption("Phone");

                        columns.Add().Type(GridCommandColumnType.Buttons)
                        .Buttons(b =>
                        {
                            b.Add().Name(GridColumnButtonName.Edit).Icon("edit").OnClick("openSingleUpdateModal");
                            b.Add().Name(GridColumnButtonName.Delete).Icon("trash").OnClick("openDeleteSingleModal");

                        }).Caption("Actions");
                    })
                    .Toolbar(toolbar =>
                    {
                        toolbar.Items(items =>
                        {
                            items.Add()
                        .Location(ToolbarItemLocation.Before)
                        .Widget(w => w.Button()
                        .Type(ButtonType.Default)
                        .Icon("add")
                        .ElementAttr(new { @class = "btn-success" })
                        .Text("Создать")
                        .OnClick("openCreateModal")

                        );
                        });
                    })


                    .Paging(p => p.PageSize(25))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new[] { 25, 50, 100 });
                        pager.ShowInfo(true);
                    })
                    .FilterRow(f => f.Visible(true))
                    .SearchPanel(s => s.Visible(true))
                    .GroupPanel(g => g.Visible(true))
                    .Sorting(s => s.Mode(GridSortingMode.Multiple))
                    .Editing(editing =>
                    {
                        editing.Mode(GridEditMode.Row);
                        editing.AllowAdding(true);
                        editing.AllowDeleting(true);
                        editing.AllowUpdating(true);
                    })
                    .OnRowClick("onRowClick")
                    )



<script>
    var collapsed = false;
    function contentReady(e) {
        if(!collapsed) {
            collapsed = true;
            e.component.expandRow(["EnviroCare"]);
        }
    }

    function customizeTooltip(pointsInfo) {
        return { text: parseInt(pointsInfo.originalValue) + "%" };
    }
    function onRowClick(e) {
        var rowData = e.data;
        var id = rowData.Id;

        console.log("ID: " + id);


    }

    
    
</script>