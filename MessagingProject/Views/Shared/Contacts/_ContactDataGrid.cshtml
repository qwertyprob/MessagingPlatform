

@(
                    Html.DevExtreme().DataGrid()
                    .ID("ContactContainer")
                    .DataSource(ds => ds.Mvc()
                    .Controller("Contacts")
                    .LoadAction("GetContactLists")
                    )
                    .Columns(columns =>
                    {
                        columns.Add().DataField("Id").Visible(false);
                        columns.Add().DataField("Name").Caption("Name");
                        columns.Add().DataField("Emails").Caption("Email");
                        columns.Add().DataField("Phones").Caption("Phone");
                        columns.Add().DataField("ParsedDate").Caption("Date");

                        columns.Add().Type(GridCommandColumnType.Buttons)
                        .Buttons(b =>
                        {
                            b.Add().Name(GridColumnButtonName.Edit).Icon("edit")
                        .OnClick("onClick");
                            b.Add().Name(GridColumnButtonName.Delete).Icon("trash")
                        .OnClick("openModalDelete");
                        });
                    })
                    .SearchPanel(s => s.Visible(true).Width(200))
                    .GroupPanel(g => g.Visible(true))
                    .Toolbar(toolbar =>
                    {
                        toolbar.Items(items =>
                        {
                            items.Add()
                        .Location(ToolbarItemLocation.Before)
                        .Widget(w => w.Button()
                        .Type(ButtonType.Default)
                        .Icon("add")
                        .ElementAttr(new { @class = "btn-success" })
                        .Text("Создать")
                        .OnClick("openModal"));
                        
                        items.Add()
                        .Location(ToolbarItemLocation.After)
                        .Widget(w => w.Button()
                        .Type(ButtonType.Normal)
                        .Icon("refresh")
                        .OnClick("refreshData"));

                            items.Add()
                 .Location(ToolbarItemLocation.After)
                 .Widget(w => w.TextBox()
                     .Placeholder("Поиск...")
                     .Value("")
                     .OnValueChanged("onSearchChange")
                     .Width(200));


                        });

                    })
                    .Sorting(s => s.Mode(GridSortingMode.Multiple))
                    .Editing(editing =>
                    {
                        editing.Mode(GridEditMode.Row);
                        editing.AllowAdding(true);
                        editing.AllowDeleting(true);
                        editing.AllowUpdating(true);
                    })

                    .OnRowClick("onRowClick")

   
)



<script type="text/javascript">


        function onSearchChange(e) {
        const searchValue = e.value;
        const dataGrid = $('#ContactContainer').dxDataGrid('instance');
        dataGrid.option("searchPanel.text", searchValue);
        dataGrid.refresh(); 

        }


        function refreshData(){
            $("#ContactContainer").dxDataGrid("getDataSource").reload();

        }


       // On row click event
    function onClick(e) {
        if (e.row && e.row.data) {
            const id = e.row.data.Id;
            window.location.href = `/Contacts/SingleList/${id}`;
        } else {
            console.error("Data not found in row!");
        }
    }

    function onRowClick(e) {
        const id = e.data.Id;
        window.location.href = `/Contacts/SingleList/${id}`;
    }


        

</script>


